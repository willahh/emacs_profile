#+TITLE: Emacs configuration
#+OPTIONS: toc:3

:TOC:


* Introduction
- Only stable packages are used from Elpa package manager
- Non stable packages are moved into vendor directory
* Installation
  :PROPERTIES:
  :CUSTOM_ID: installation
  :END:
** Mac Os X
    :PROPERTIES:
    :CUSTOM_ID: mac-os-x
    :END:

-  Mac Os X >= 10.11
-  emacs >= 25
-  Use of emacs-osx for osx instead of the default brew emacs
   https://github.com/railwaycat/homebrew-emacsmacport

Emacs installation :

#+BEGIN_SRC bash
brew tap railwaycat/emacsmacport
brew install emacs-mac

##brew install --with-cocoa --srgb emacs
#+END_SRC


Configuration :

#+BEGIN_SRC bash
git clone https://github.com/willahh/emacs_profile ~/.emacs.d
#+END_SRC

- Use font "fira-monoS" - size : 12 - ~/.emacs.d/fonts/meslo (Menu >
option > set default font) - Install below dependencies globaly
** Windows
    :PROPERTIES:
    :CUSTOM_ID: windows
    :END:

-  Gnutls
-  htftp://ftp.gnutls.org/gcrypt/gnutls/w32/

* bin (global)
:PROPERTIES:
     :CUSTOM_ID: bin-global
     :END:

All binaries should be accessible from emacs. In osx by default emacs
load .bashrc (~/.bash\_profile should be copied .bashrc)

VC - svn - git

Search tools - ag (lightning search)


Tags tools @@html:<!-- - ctags -->@@ @@html:<!-- - tags -->@@
@@html:<!-- - cscope -->@@ @@html:<!-- - Global -->@@
@@html:<!-- - gtags -->@@

** global bin
     :PROPERTIES:
     :CUSTOM_ID: global-bin
     :END:

VC - svn - git

Search tools - ag (lightning search)

Language tools
@@html:<!-- - ispell - brew install ispell --witch-lang-fr -->@@

Tags tools - global (gtags) - brew install global --with-pygments
--with-ctags --with-exuberant-ctags

#+BEGIN_HTML
  <!-- - tags https://github.com/leoliu/ggtags/wiki/Install-Global-with-support-for-exuberant-ctags -->
#+END_HTML

#+BEGIN_HTML
  <!-- - gtags - brew install global (gtags) -->
#+END_HTML

#+BEGIN_HTML
  <!-- - ctags - brew install --HEAD ctags -->
#+END_HTML

#+BEGIN_HTML
  <!-- - cscope - brew install cscope -->
#+END_HTML

#+BEGIN_HTML
  <!-- - Global - brew install global --with-exuberant-ctags -->
#+END_HTML
* Support : Language checker
** Tools : ispell
*** OSX
#+BEGIN_SRC
brew install ispell
#+END_SRC
** Tools : hunspell
Links
 - https://wiki.openoffice.org/wiki/Dictionaries .
 - https://cgit.freedesktop.org/libreoffice/dictionaries/tree/fr_FR

Install hunspell :
#+BEGIN_SRC shell
brew instsall hunspell
#+END_SRC

Install dictionary :

Copy
  - .emacs.d/resources/dictionary/fr.aff
  - .emacs.d/resources/dictionary/fr.dic

to ~/Library/Spelling/

------------------

From "man hunspell" :
Dictionary files (*.aff and *.dic) should be placed in
~/Library/Spelling/ or /Library/Spelling/.  Homebrew itself
provides no dictionaries for Hunspell, but you can download
compatible dictionaries from other sources, such as

** Tools : languagetools
 @todo Used for grammar check
 https://www.languagetool.org

 - Download the "Stand alone for desktop" version.
 - Move the folder to "~/bin/" 

* Support : sass
** Resources :
[[http://sass-lang.com/install][sass]]-lang.com
** Tools : sass
*** OSX
#+BEGIN_SRC sh
gem install sass
#+END_SRC
* Support : css
** Tools : csslint (Syntax checker)
https://github.com/gajus/css-lint
https://github.com/CSSLint/csslint/wiki/Command-line-interface

Installation

#+BEGIN_SRC sh
sudo npm install -g csslint
#+END_SRC

Configuration

.csslintrc file
#+BEGIN_SRC json
  {
      "adjoining-classes": false,
      "box-model": false,
      "order-alphabetical": false,
      "box-sizing": false,
      "bulletproof-font-face": false,
      "compatible-vendor-prefixes": false,
      "display-property-grouping": false,
      "duplicate-background-images": false,
      "duplicate-properties": false,
      "empty-rules": false,
      "fallback-colors": false,
      "floats": false,
      "font-faces": false,
      "font-sizes": false,
      "gradients": false,
      "ids": false,
      "import": false,
      "important": false,
      "known-properties": false,
      "non-link-hover": false,
      "outline-none": false,
      "overqualified-elements": false,
      "qualified-headings": false,
      "regex-selectors": false,
      "shorthand": false,
      "star-property-hack": false,
      "text-indent": false,
      "underscore-property-hack": false,
      "vendor-prefix": false,
      "unique-headings": false,
      "universal-selector": false,
      "unqualified-attributes": false,
      "zero-units": false
  }
#+END_SRC

* Support : php
** Tools
*** php
    http://php.net/
*** php REPL : psysh
A REPL for PHP https://github.com/bobthecow/psysh
Used for debug php interactively.
There is no need to have psysh installed to execute code inside #+BEGIN_SRC php

Installation : http://php.net/
#+BEGIN_SRC sh
wget https://git.io/psysh
chmod +x psysh
./psysh
#+END_SRC

psysh should be accessible on your $PATH dir.


*** A ranger



PHP tools - php https://secure.php.net/ (brew install
homebrew/php/php56)

* Support : html
** Tools
*** phantomjs
http://phantomjs.org/
**** osx
#+BEGIN_SRC bash
brew install phantomjs
#+END_SRC
* Support : javascript
** Tools
*** eslint
http://eslint.org/
http://eslint.org/docs/user-guide/getting-started

Installation :

#+BEGIN_SRC shell
npm install -g eslint
#+END_SRC

Create .jscsrc file into user dir

#+BEGIN_SRC json
  {
      "maxErrors": Infinity,
      "requireCurlyBraces": [ "if", "else", "for", "while", "do" ],
      "requireSpaceAfterKeywords": [ "if", "else", "for", "while", "do", "switch", "return" ],
      "requireSpacesInFunctionExpression": {
          "beforeOpeningCurlyBrace": true
      },
      "disallowSpacesInFunctionExpression": {
          "beforeOpeningRoundBrace": false
      },
      "requireMultipleVarDecl": false,
      "requireSpacesInsideObjectBrackets": "all",
      "requireSpacesInsideArrayBrackets": "all",
      "requireSpaceBeforeBinaryOperators": ["+", "-", "/", "*", "=", "==", "===", "!=", "!=="],
      "requireRightStickedOperators": [ "!" ],
      "requireLeftStickedOperators": [ "," ],
      "disallowKeywords": [ "with" ],
      "disallowMultipleLineBreaks": true,
      "disallowKeywordsOnNewLine": [ "else" ],
      "requireLineFeedAtFileEnd": true,
      "disallowSpaceAfterObjectKeys": true,
      "validateLineBreaks": "LF"
  }
#+END_SRC
*** todo


Javascript tools - Nodejs https://nodejs.org/en/

-  Node package manager https://www.npmjs.com/

-  tern http://ternjs.net/

-  eslint http://eslint.org/docs/user-guide/getting-started (sudo npm -g
   install eslint)

-  babel-eslint (sudo npm install babel-eslint -g)

-  eslint-plugin-react (sudo npm install eslint-plugin-react -g)

-  js-beautify (npm install -g js-beautify)
   
Javascript tools - tern - eslint - babel-eslint - eslint-plugin-react -
js-beautify

* Support : PDF
    :PROPERTIES:
    :CUSTOM_ID: display-pdf-in-emacs-on-osx
    :END:
Display PDF in Emacs on OSX
** Resources
     :PROPERTIES:
     :CUSTOM_ID: links
     :END:

-  https://emacs.stackexchange.com/a/22591/15824
-  https://emacs.stackexchange.com/questions/13314/install-pdf-tools-on-emacs-macosx

** Dependencies
     :PROPERTIES:
     :CUSTOM_ID: dependencies
     :END:

-  pdf-tools : https://github.com/politza/pdf-tools
-  clisp : Common Lisp interpreter

** Installation
     :PROPERTIES:
     :CUSTOM_ID: installation-1
     :END:

={r, engine='bash', count_lines} brew install pdf-tools brew install clisp=
From Emacs : launch "pdf-tools-install"

In Emacs, the commands pdf-tools-install need to be launched.

* Support : LaTeX
    :PROPERTIES:
    :CUSTOM_ID: latex-support
    :END:
Latex support
*** Links
     :PROPERTIES:
     :CUSTOM_ID: links-1
     :END:

-  https://www.latex-project.org/get/ #### Installation on OSX
-  Full support : MacTeX : http://www.tug.org/mactex/
-  Light support : BasicTeX :
   http://www.tug.org/mactex/morepackages.html

* Support : Office Documents
    :PROPERTIES:
    :CUSTOM_ID: excel-word-support
    :END:
Excel, Word support
={r, engine='bash', count_lines} brew install ghostscript=
