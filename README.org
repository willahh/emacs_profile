#+TITLE: Emacs configuration
#+OPTIONS: toc:3

:TOC:


* Introduction
** General rules
- Only stable packages are used from Elpa package manager
- Non stable packages are moved into vendor directory

* Installation
  :PROPERTIES:
  :CUSTOM_ID: installation
  :END:
** Mac Os X
    :PROPERTIES:
    :CUSTOM_ID: mac-os-x
    :END:

-  Mac Os X >= 10.11
-  emacs >= 25
-  Use of emacs-osx for osx instead of the default brew emacs

@todo Ajouter la formulaire pour installer la version OSX ()
#+BEGIN_SRC bash
##brew install --with-cocoa --srgb emacs git clone --recursive https://github.com/willahh/emacs_profile ~/.emacs.d=
#+END_SRC
- Use font "fira-monoS" - size : 12 - ~/.emacs.d/fonts/meslo (Menu >
option > set default font) - Install below dependencies globaly

*** CSS

install -g csslint - sudo npm install -g jscs - Ajouter .jscsrc dans ~

{ "requireCurlyBraces": [ "if", "else", "for", "while", "do" ],
"requireSpaceAfterKeywords": [ "if", "else", "for", "while", "do",
"switch", "return" ], "requireSpacesInFunctionExpression": {
"beforeOpeningCurlyBrace": true }, "disallowSpacesInFunctionExpression":
{ "beforeOpeningRoundBrace": true }, "requireMultipleVarDecl": true,
"requireSpacesInsideObjectBrackets": "all",
"requireSpacesInsideArrayBrackets": "all",
"disallowLeftStickedOperators": [ "?", "-", "/", "*", "=", "==", "===",
"!=", "!==", ">", ">=", "<", "<=" ], "disallowRightStickedOperators": [
"?", "/", "*", ":", "=", "==", "===", "!=", "!==", ">", ">=", "<",
"<="], "requireSpaceBeforeBinaryOperators": ["+", "-", "/", "*", "=",
"==", "===", "!=", "!=="], "disallowSpaceAfterPrefixUnaryOperators":
["++", "--", "+", "-"], "disallowSpaceBeforePostfixUnaryOperators":
["++", "--"], "requireRightStickedOperators": [ "!" ],
"requireLeftStickedOperators": [ "," ], "disallowKeywords": [ "with" ],
"disallowMultipleLineBreaks": true, "disallowKeywordsOnNewLine": [
"else" ], "requireLineFeedAtFileEnd": true,
"disallowSpaceAfterObjectKeys": true, "validateLineBreaks": "LF" }

-  Create a .tern-project file in ~/ directory for a global javascript
   ES6 support
   ={r, engine='bash', count_lines} {   "ecmaVersion": 6,   "libs": [ "browser"   ],   "loadEagerly": [ "path/to/your/js/**/*.js"   ],   "dontLoad": [ "node_modules/**", "path/to/your/js/**/*.js"   ],   "plugins": { "modules": {}, "es_modules": {}, "node": {}, "doc_comment": {   "fullDocs": true,   "strong": true }   } }=
-  Create a ..eslintrc file in ~/ directory for a global javascript
   checker
   ={r, engine='bash', count_lines} {   "parser": "babel-eslint",   "plugins": [ "react" ],   "env": { "browser": true, "es6": true, "node": true   },   "ecmaFeatures": { "arrowFunctions": true, "blockBindings": true, "classes": true, "defaultParams": true, "destructuring": true, "forOf": true, "generators": true, "modules": true, "spread": true, "templateStrings": true, "jsx": true   },   "rules": { "consistent-return": [0], "key-spacing": [0], "quotes": [0], "new-cap": [0], "no-multi-spaces": [0], "no-shadow": [0], "no-unused-vars": [1], "no-use-before-define": [2, "nofunc"], "react/jsx-no-undef": 1, "react/jsx-uses-react": 1, "react/jsx-uses-vars": 1   } }=
** Windows
    :PROPERTIES:
    :CUSTOM_ID: windows
    :END:

-  Gnutls
-  htftp://ftp.gnutls.org/gcrypt/gnutls/w32/

*** bin (global)
     :PROPERTIES:
     :CUSTOM_ID: bin-global
     :END:

All binaries should be accessible from emacs. In osx by default emacs
load .bashrc (~/.bash\_profile should be copied .bashrc)

VC - svn - git

Search tools - ag (lightning search)

PHP tools - php - composer

Javascript tools - tern - eslint - babel-eslint - eslint-plugin-react -
js-beautify

CSS tools - csslint (Syntax checker)

Language tools @@html:<!-- - ispell -->@@

Tags tools @@html:<!-- - ctags -->@@ @@html:<!-- - tags -->@@
@@html:<!-- - cscope -->@@ @@html:<!-- - Global -->@@
@@html:<!-- - gtags -->@@

*** global bin
     :PROPERTIES:
     :CUSTOM_ID: global-bin
     :END:

VC - svn - git

Search tools - ag (lightning search)

PHP tools - php https://secure.php.net/ (brew install
homebrew/php/php56)

Javascript tools - Nodejs https://nodejs.org/en/

-  Node package manager https://www.npmjs.com/

-  tern http://ternjs.net/

-  eslint http://eslint.org/docs/user-guide/getting-started (sudo npm -g
   install eslint)

-  babel-eslint (sudo npm install babel-eslint -g)

-  eslint-plugin-react (sudo npm install eslint-plugin-react -g)

-  js-beautify (npm install -g js-beautify)

CSS tools - csslint (sudo npm -g install csslint)

Language tools
@@html:<!-- - ispell - brew install ispell --witch-lang-fr -->@@

Tags tools - global (gtags) - brew install global --with-pygments
--with-ctags --with-exuberant-ctags

#+BEGIN_HTML
  <!-- - tags https://github.com/leoliu/ggtags/wiki/Install-Global-with-support-for-exuberant-ctags -->
#+END_HTML

#+BEGIN_HTML
  <!-- - gtags - brew install global (gtags) -->
#+END_HTML

#+BEGIN_HTML
  <!-- - ctags - brew install --HEAD ctags -->
#+END_HTML

#+BEGIN_HTML
  <!-- - cscope - brew install cscope -->
#+END_HTML

#+BEGIN_HTML
  <!-- - Global - brew install global --with-exuberant-ctags -->
#+END_HTML
* Support : Language
** Tools : ispell
*** OSX
#+BEGIN_SRC
brew install ispell
#+END_SRC
* Support : sass
** Resources :
[[http://sass-lang.com/install][sass]]-lang.com
** Tools : sass
*** OSX
#+BEGIN_SRC sh
gem install sass
#+END_SRC
* Support : php
** Tools
*** php
    http://php.net/
*** php REPL : psysh
A REPL for PHP https://github.com/bobthecow/psysh
Used for debug php interactively.
There is no need to have psysh installed to execute code inside #+BEGIN_SRC php

Installation : http://php.net/
#+BEGIN_SRC sh
wget https://git.io/psysh
chmod +x psysh
./psysh
#+END_SRC

psysh should be accessible on your $PATH dir.

* Support : html
** Tools
*** phantomjs
http://phantomjs.org/
**** osx
#+BEGIN_SRC bash
brew install phantomjs
#+END_SRC
* Mode : PDF
    :PROPERTIES:
    :CUSTOM_ID: display-pdf-in-emacs-on-osx
    :END:
Display PDF in Emacs on OSX
** Resources
     :PROPERTIES:
     :CUSTOM_ID: links
     :END:

-  https://emacs.stackexchange.com/a/22591/15824
-  https://emacs.stackexchange.com/questions/13314/install-pdf-tools-on-emacs-macosx

** Dependencies
     :PROPERTIES:
     :CUSTOM_ID: dependencies
     :END:

-  pdf-tools : https://github.com/politza/pdf-tools
-  clisp : Common Lisp interpreter

** Installation
     :PROPERTIES:
     :CUSTOM_ID: installation-1
     :END:

={r, engine='bash', count_lines} brew install pdf-tools brew install clisp=
From Emacs : launch "pdf-tools-install"

* Mode : LaTeX
    :PROPERTIES:
    :CUSTOM_ID: latex-support
    :END:
Latex support
*** Links
     :PROPERTIES:
     :CUSTOM_ID: links-1
     :END:

-  https://www.latex-project.org/get/ #### Installation on OSX
-  Full support : MacTeX : http://www.tug.org/mactex/
-  Light support : BasicTeX :
   http://www.tug.org/mactex/morepackages.html

* Mode : Office Documents
    :PROPERTIES:
    :CUSTOM_ID: excel-word-support
    :END:
Excel, Word support
={r, engine='bash', count_lines} brew install ghostscript=
