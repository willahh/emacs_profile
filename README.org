#+TITLE: Emacs configuration
#+OPTIONS: toc:3

:TOC:      

* Description
  This is my Emacs configuration i use and tweak every day. Mainly used from OSX
  system.   The  installation   can  be   done   quickly,  however   a  lot   of
  functionnalities  depends on  external tools.  Theses are  describes into  the
  "Support" section.
  
** Rules
   Packages :
  - Only stable packages are used from Elpa package manager
  - Non stable packages are moved into vendor directory
  - Elpa directory is not in ignore rules, all packages are submited
* Installation
  :PROPERTIES: 
  :CUSTOM_ID: installation
  :END:
** Mac Os X
 -  Mac Os X >= 10.11
 -  emacs >= 25
 -  Use of emacs-osx for osx instead of the default brew emacs
    https://github.com/railwaycat/homebrew-emacsmacport
    
    Emacs installation :
    
 #+BEGIN_SRC bash
brew tap railwaycat/emacsmacport brew install emacs-mac --with-cocoa
 #+END_SRC
 
 
 Clone this configuration :
 
 #+BEGIN_SRC bash
git clone https://github.com/willahh/emacs_profile ~/.emacs.d
 #+END_SRC
 
 Font :
    - Use font "fira-mono" - size : 12 - ~/.emacs.d/fonts/meslo (Menu > option >
      set default font)
** Windows
   :PROPERTIES: 
    :CUSTOM_ID: windows
    :END:
   
- Gnutls
- htftp://ftp.gnutls.org/gcrypt/gnutls/w32/
** Launch as server
http://www.star.bris.ac.uk/bjm/emacs-tips.html#orgheadline3

#+BEGIN_SRC shell
#! /bin/tcsh -f

# start emacs server - replace with path to your emacs
/Applications/Emacs.app/Contents/MacOS/Emacs --daemon

# start emacs client - replace with path to your emacsclient
# this is usually in the same place as your emacs executable
/Applications/Emacs.app/Contents/MacOS/bin-x86_64-10_9/emacsclient -c $argv
#+END_SRC

* Required binaries
  - brew
  - gnutls
  - svn
  - git
  - ag
  - php
  - mysql
  - apache
  - node
  - npm
  - ispell
  - typescript
  - jscs
  - pandoc
  - Latex dependencies
* Support
** Spell checker
*** Tools : ispell
**** OSX
#+BEGIN_SRC
brew install ispell
#+END_SRC
*** Tools : hunspell
Links
 - https://wiki.openoffice.org/wiki/Dictionaries .
 - https://cgit.freedesktop.org/libreoffice/dictionaries/tree/fr_FR

Install hunspell :
#+BEGIN_SRC shell
brew instsall hunspell
#+END_SRC

Install dictionary :

Copy
  - .emacs.d/resources/dictionary/*

to ~/Library/Spelling/

**** Documentation
#+BEGIN_SRC bash
man hunspell
#+END_SRC

"... Dictionary files (*.aff and *.dic) should be placed in ~/Library/Spelling/
or /Library/Spelling/.  Homebrew itself provides no dictionaries for Hunspell,
but you can download compatible dictionaries from other sources, such as ..."

*** Tools : languagetools
  @todo Used for grammar check https://www.languagetool.org

  - Download the "Stand alone for desktop" version.
  - Move the folder to "~/bin/"

** Sass
*** Resources :
[[http://sass-lang.com/install][sass]]-lang.com
*** Tools : sass
**** OSX
#+BEGIN_SRC sh
gem install sass
#+END_SRC
** CSSh
*** Tools : csslint (Syntax checker)
https://github.com/gajus/css-lint
https://github.com/CSSLint/csslint/wiki/Command-line-interface

Installation

#+BEGIN_SRC sh
sudo npm install -g csslint
#+END_SRC

Configuration

.csslintrc file
#+BEGIN_SRC json
  { "adjoining-classes": false, "box-model": false, "order-alphabetical": false,
      "box-sizing": false, "bulletproof-font-face": false,
      "compatible-vendor-prefixes": false, "display-property-grouping": false,
      "duplicate-background-images": false, "duplicate-properties": false,
      "empty-rules": false, "fallback-colors": false, "floats": false,
      "font-faces": false, "font-sizes": false, "gradients": false, "ids":
      false, "import": false, "important": false, "known-properties": false,
      "non-link-hover": false, "outline-none": false, "overqualified-elements":
      false, "qualified-headings": false, "regex-selectors": false, "shorthand":
      false, "star-property-hack": false, "text-indent": false,
      "underscore-property-hack": false, "vendor-prefix": false,
      "unique-headings": false, "universal-selector": false,
      "unqualified-attributes": false, "zero-units": false }
#+END_SRC

** PHP
*** Tools
**** php
     http://php.net/
**** php REPL : psysh
A REPL for PHP https://github.com/bobthecow/psysh Used for debug php
interactively.  There is no need to have psysh installed to execute code
inside #+BEGIN_SRC php

Installation : http://php.net/
#+BEGIN_SRC sh
wget https://git.io/psysh chmod +x psysh ./psysh
#+END_SRC

psysh should be accessible on your $PATH dir.

**** @todo
PHP tools - php https://secure.php.net/ (brew install homebrew/php/php56)

** HTML
*** Tools
**** phantomjs
     http://phantomjs.org/
***** osx
#+BEGIN_SRC bash
brew install phantomjs
#+END_SRC
** Javascript :todo:
   The most recent and advanced support is eslint. It seems to me that
   currently my conf is only using jscs. The file to edit is .jscsrc
*** Tools
    npm install -g typescript
*** jscs
**** eslint
http://eslint.org/ http://eslint.org/docs/user-guide/getting-started

Installation :

#+BEGIN_SRC shell
npm install -g eslint
#+END_SRC

Create .eslintrc file into user dir

Default config files : https://gist.github.com/cletusw/e01a85e399ab563b1236

#+BEGIN_SRC json
  { "parserOptions": { "ecmaVersion": 6, "sourceType": "module", "ecmaFeatures":
      { "jsx": true } }, "rules": { "semi": 0 } }
#+END_SRC
**** todo
Javascript tools - Nodejs https://nodejs.org/en/

-  Node package manager https://www.npmjs.com/
-  tern http://ternjs.net/
-  eslint http://eslint.org/docs/user-guide/getting-started (sudo npm -g
   install eslint)
-  babel-eslint (sudo npm install babel-eslint -g)
-  eslint-plugin-react (sudo npm install eslint-plugin-react -g)
-  js-beautify (npm install -g js-beautify)

Javascript tools - tern - eslint - babel-eslint - eslint-plugin-react -
js-beautify

** PDF
   Display PDF in Emacs on OSX
** LaTeX
**** Links
     https://www.latex-project.org/get/ #### Installation on OSX
     
     - Full support : MacTeX : http://www.tug.org/mactex/
     - Light support : BasicTeX :
       http://www.tug.org/mactex/morepackages.html

     Full support is needed to export org file to LaTeX PDF file.

** Office Documents
    :PROPERTIES:
    :CUSTOM_ID: excel-word-support
    :END:
Excel, Word support ={r, engine='bash', count_lines} brew install ghostscript=
* Utils
** Convert Markdown to org
*** Links
  - http://pandoc.org/

*** Documentation
#+BEGIN_SRC man
man pandoc
#+END_SRC

*** Installation
  - http://pandoc.org/installing.html
    
*** Simple example
Convert .md file to .org file with :

#+BEGIN_SRC shell
pandoc -o README.md README.org
#+END_SRC

